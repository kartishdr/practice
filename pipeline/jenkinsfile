def CONTAINER_NAME="smappimage"
def CONTAINER_TAG="$params.tag"
def DOCKER_HUB_USER="kartish"
def REMOTE_IP="$params.ip"

node {

    // stage('Initialize'){
    //     def dockerHome = tool 'myDocker'
    //     def mavenHome  = tool 'myMaven'
    //     env.PATH = "${dockerHome}/bin:${mavenHome}/bin:${env.PATH}"
    // }

    stage('Checkout') {
        checkout scm
    }

    // stage('Build'){
    //     sh "mvn clean install"
    // }

    stage("Image Prune"){
        sh 'whoami'
        imagePrune(CONTAINER_NAME)
    }

    stage('Image Build'){
        imageBuild(CONTAINER_NAME, CONTAINER_TAG)
    }

    stage('Push to Docker Registry'){
         withCredentials([usernamePassword(credentialsId: 'dockerHubAccount', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            pushToImage(CONTAINER_NAME, CONTAINER_TAG, REMOTE_IP, USERNAME, PASSWORD)
        }
    }

    stage('Run App'){
         withCredentials([usernamePassword(credentialsId: 'dockerHubAccount', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')])
            def REMOTE_IP="$params.ip"
            def CONTAINER_TAG="$params.tag"
            runApp(CONTAINER_NAME, CONTAINER_TAG, DOCKER_HUB_USER, REMOTE_IP, USERNAME, PASSWORD)
     }

}

def imagePrune(containerName){
    try {
        sh "docker image prune -f"
    } catch(error){}
}

def imageBuild(containerName, tag){
    sh "cd smapp && docker build -t $containerName:$params.tag  -t $containerName --pull --no-cache ."
    echo "Image build complete"
}

def pushToImage(containerName, tag, remoteIp, dockerUser, dockerPassword){
    sh "docker login -u $dockerUser -p $dockerPassword ${remoteIp}:8090"
    sh "docker tag $containerName:${params.tag} ${params.ip}:8090/${containerName}:${params.tag}"
    sh "docker push ${params.ip}:8090/${containerName}:${params.tag}"
    echo "Image push complete"
}

def runApp(containerName, tag, dockerHubUser, remoteIp, dockerUser){
     sh "ssh-keyscan -H $remoteIp >> ~/.ssh/known_hosts && ssh -i ~/kar centos@$remoteIp 'docker pull $remoteIp:8090/$containerName:$tag && ls'"
     sh "ssh-keyscan -H $remoteIp >> ~/.ssh/known_hosts && scp -i ~/kar -r /var/lib/jenkins/workspace/grnpipeline/pipeline/docker-compose.yml centos@$remoteIp:/home/centos"
     sh "ssh-keyscan -H $remoteIp >> ~/.ssh/known_hosts && ssh -i ~/kar centos@$remoteIp 'cd /home/centos && ls && docker-compose up -d'"
     echo "App services are running"
 }
